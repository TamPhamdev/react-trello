{"version":3,"sources":["service.js","components/FormLogin.js","components/ModalLogin.js","components/FormSignUp.js","components/ModalSignUp.js","components/Template.js","components/AddTask.js","components/Task.js","components/TaskList.js","components/Board.js","components/GroupList.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","_callee","data","regenerator_default","a","wrap","_context","prev","next","Axios","post","concat","then","response","console","log","catch","err","Promise","reject","abrupt","sent","stop","FormLogin","state","email","password","handleOnChange","event","_this","setState","Object","defineProperty","target","name","value","submitLogin","e","preventDefault","stopPropagation","localStorage","setItem","token","Date","now","username","alert","keyUpHandler","keyCode","_this$state","this","react_default","createElement","style","width","onSubmit","bind","id","es_input","prefix","icon","type","color","placeholder","onChange","required","margin","Component","Text","Typography","ModalLogin","ModalText","visible","confirmLoading","showModal","handleSubmit","setTimeout","props","action","handleCancel","onClick","strong","modal","title","onOk","onCancel","footer","es_button","form","key","htmlType","onKeyUp","components_FormLogin","FormSignUp","validateFieldsAndScroll","values","_x","_signup","apply","arguments","signup","compareToFirstPassword","rule","callback","getFieldValue","getFieldDecorator","es_form","assign","labelCol","xs","span","sm","wrapperCol","Item","label","rules","message","hasFeedback","validator","validateToNextPassword","Password","onBlur","handleConfirmBlur","Form","create","user","components_FormSignUp","Header","Layout","Content","auth","getItem","Template","isLogin","logOut","clear","logIn","forceUpdate","height","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","Template_Text","Fragment","padding","toUpperCase","cursor","SubMenu","ModalLogin_ModalLogin","ModalSignUp_ModalLogin","children","RangePicker","DatePicker","addTaskStyle","textalign","moment","format","AddTask","startDate","endDate","date","dateString","text","querySelector","trim","item","String","valueOf","createTask","success","cancelAddTask","stlye","marginRight","Paragraph","Task","taskTitle","updateTask","taskID","groupID","onClickTask","deleteTask","index","expired","classesName","react_beautiful_dnd_esm","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","className","editable","list","size","dataSource","renderItem","popconfirm","onConfirm","okText","cancelText","taskStyle","fontSize","TaskList","isAddTask","handleClickAddTask","handleClickCancelAddTask","_this2","_this$props","groupTasks","taskElement","map","task","components_Task","droppableId","droppableProps","components_AddTask","styleBoard","boxShadow","Board","groupTitle","onClickGroup","col","lg","md","card","hoverable","components_TaskList","GroupList","currentIDGroup","currentTitleGroup","currentIndexGroup","currentIDTask","currentIndexTask","currentTitleTask","isAddGroup","isLoading","handleClickGroup","findIndex","handleClickTask","idTask","idGroup","_this$findIndex2","tasks","handleAddTask","_this$findIndex3","forEach","push","taskClone","splice","error","warning","onDragEnd","result","destination","source","column","sourceColumnIndex","_sourceColumnIndex$ta","updatedColumn","slicedToArray","objectSpread","toConsumableArray","get","withCredentials","nextProps","nextState","_this3","row","text-align","position","top","left","spin","tip","groupElement","group","Board_Board","onChangeTask","_ref","gutter","justify","App","components_Template","GroupList_GroupList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38befa6b.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = \"http://localhost:5000\";\r\n\r\nexport function getBoard() {\r\n  return Axios.get(`${BASE_URL}/api/board`, {withCredentials:true})\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function login(data) {\r\n  return Axios.post(`${BASE_URL}/api/login`,   data)\r\n    .then(response => {\r\n      localStorage.setItem('x-access-token', response.data.token);\r\n      localStorage.setItem('x-access-token-expiration', Date.now() +2 *60*60 * 1000);\r\n      localStorage.setItem('user', response.data.username);\r\n      console.log(response.data);\r\n      return response.data;\r\n    })\r\n    .catch(err => Promise.reject('Authentication failed'));\r\n}\r\n\r\nexport async function signup(data) {\r\n  return await Axios.post(`${BASE_URL}/api/signup`, data)\r\n    .then(response => {\r\n      console.log(response.data);\r\n    })\r\n    .catch(err => Promise.reject('Sign Up failed'));\r\n}\r\n\r\nexport function isAuthenticated(){\r\n\treturn localStorage.getItem('x-access-token') && localStorage.getItem('x-access-token-expiration') > Date.now()\r\n}","import React, { Component } from \"react\";\r\nimport { Input, Icon } from \"antd\";\r\nimport { login } from \"../service\";\r\n\r\nclass FormLogin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  // Thay đổi input mỗi khi match với name của input\r\n  handleOnChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  // submit form login\r\n  submitLogin = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation()\r\n    login(this.state).catch(err => alert(err));\r\n    this.setState({ email: \"\", password: \"\" });\r\n  };\r\n  // handler \"Enter\" key\r\n  keyUpHandler = e => {\r\n    if (e.keyCode === 13) {\r\n      this.submitLogin();\r\n    }\r\n  };\r\n  render() {\r\n    const { email, password } = this.state;\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <form onSubmit={this.submitLogin.bind(this)} id=\"myform\">\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"text\"\r\n            placeholder=\"Your email\"\r\n            value={email}\r\n            onChange={this.handleOnChange}\r\n            name=\"email\"\r\n            required\r\n            style={{ margin: \"15px\" }}\r\n          />\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Your Password\"\r\n            value={password}\r\n            onChange={this.handleOnChange}\r\n            name=\"password\"\r\n            required\r\n            style={{ margin: \"15px\" }}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormLogin;\r\n","import React, { Component } from 'react';\r\nimport {Modal, Button, Typography} from 'antd';\r\nimport FormLogin from './FormLogin';\r\n\r\nconst {Text} = Typography;\r\n\r\n\r\nexport default class ModalLogin extends Component {\r\n\r\n  state = {\r\n    ModalText: 'Content of the modal',\r\n    visible: false,\r\n    confirmLoading: false\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  handleSubmit = (e) => {\r\n\r\n      this.setState({\r\n        ModalText: 'Logging....Please wait a second ',\r\n        confirmLoading: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.props.action();\r\n        this.setState({\r\n          visible: false,\r\n          confirmLoading: false,\r\n        });\r\n      }, 500);\r\n  }\r\n  \r\n  handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n     const { visible, confirmLoading  } = this.state;\r\n    return (\r\n      <div>\r\n        <div type=\"primary\" onClick={this.showModal} >\r\n        <Text strong style={{ color: \"#fff\" }}>Login</Text>\r\n        </div>\r\n        <Modal\r\n        title=\"Login Form\"\r\n        visible={visible}\r\n        onOk={this.handleSubmit}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={this.handleCancel}\r\n        footer={[\r\n          <Button form=\"myform\" key=\"submit\" htmlType=\"submit\"onClick={this.handleSubmit} \r\n          onKeyUp={this.handleSubmit}>\r\n              Submit\r\n          </Button>\r\n          ]}\r\n        >\r\n          <FormLogin {...this.state} />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n// }","import { signup } from \"../service\";\r\nimport React, { Component } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\n\r\nclass FormSignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        signup(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n    // const tailFormItemLayout = {\r\n    //   wrapperCol: {\r\n    //     xs: {\r\n    //       span: 24,\r\n    //       offset: 0\r\n    //     },\r\n    //     sm: {\r\n    //       span: 16,\r\n    //       offset: 8\r\n    //     }\r\n    //   }\r\n    // };\r\n    return (\r\n      <Form\r\n        {...formItemLayout}\r\n        onSubmit={this.handleSubmit.bind(this)}\r\n        id=\"signup\"\r\n      >\r\n        <Form.Item label=\"E-mail\">\r\n          {getFieldDecorator(\"email\", {\r\n            rules: [\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\"\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\"\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Password\" hasFeedback>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your password!\"\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword\r\n              }\r\n            ]\r\n          })(<Input.Password />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator(\"confirm\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\"\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword\r\n              }\r\n            ]\r\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nFormSignUp = Form.create({ name: \"register\" })(FormSignUp);\r\nexport default FormSignUp;\r\n","import React, { Component } from 'react';\r\nimport {Modal, Button} from 'antd';\r\nimport FormSignUp from './FormSignUp';\r\n\r\nexport default class ModalLogin extends Component {\r\n\r\n  state = {\r\n    user: '',\r\n    ModalText: 'Content of the modal',\r\n    visible: false,\r\n    confirmLoading: false\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  \r\n  // submit modal sign up\r\n  handleSubmit = (e) => {\r\n   \r\n    this.setState({\r\n      ModalText: 'Please wait a second ',\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        visible: false,\r\n        confirmLoading: false,\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  render() {\r\n     const { visible, confirmLoading  } = this.state;\r\n    return (\r\n      <div>\r\n        <div type=\"primary\" onClick={this.showModal} >\r\n          Sign Up\r\n        </div>\r\n        <Modal\r\n        title=\"SignUp Form\"\r\n        visible={visible}\r\n        onOk={this.handleSubmit}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={this.handleCancel}\r\n        footer={[\r\n          <Button type=\"primary\" form=\"signup\" key=\"submit\" htmlType=\"submit\" onClick={this.handleSubmit}>\r\n              Register\r\n          </Button>\r\n          ]}\r\n          >\r\n          <FormSignUp {...this.props}/>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ModalLogin from \"./ModalLogin\";\r\nimport ModalSignUp from \"./ModalSignUp\";\r\nimport { isAuthenticated } from \"../service\";\r\nimport { Layout, Menu, Typography, Icon } from \"antd\";\r\n\r\nconst { Header, Content } = Layout;\r\nconst { Text } = Typography;\r\n\r\n// authentication\r\nconst auth = isAuthenticated();\r\n\r\nclass Template extends Component {\r\n  state = {\r\n    isLogin: auth\r\n  };\r\n\r\n  // log out method\r\n  logOut = () => {\r\n    localStorage.clear();\r\n    this.setState({ isLogin: false });\r\n  };\r\n  // log in method\r\n  logIn = () => {\r\n    setTimeout(() => {\r\n      this.setState({ isLogin: true });\r\n    });\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    const user = localStorage.getItem(\"user\");\r\n    const { isLogin } = this.state;\r\n    return (\r\n      <div style={{ height: \"100vh\" }}>\r\n        <Layout>\r\n          <Header>\r\n            <Menu\r\n              {...this.props}\r\n              theme=\"dark\"\r\n              mode=\"horizontal\"\r\n              defaultSelectedKeys={[\"home\"]}\r\n              style={{ lineHeight: \"64px\" }}\r\n            >\r\n              <Menu.Item key=\"home\">\r\n                <Text strong style={{ color: \"#fff\" }}>\r\n                  Trello\r\n                </Text>\r\n              </Menu.Item>\r\n              {!isLogin ? (\r\n                <Menu.SubMenu\r\n                  {...this.props}\r\n                  title={\r\n                    <>\r\n                      <Icon type=\"user\" />\r\n                      <Text strong style={{ color: \"#fff\" }}>\r\n                        Login/SignUp\r\n                      </Text>\r\n                    </>\r\n                  }\r\n                >\r\n                  <Menu.Item>\r\n                    <ModalLogin action={this.logIn} />\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    <ModalSignUp />\r\n                  </Menu.Item>\r\n                </Menu.SubMenu>\r\n              ) : (\r\n                <>\r\n                  <Text strong style={{ color: \"#fff\" , padding: '1rem'}}>\r\n                    {user.toUpperCase()}\r\n                  </Text>\r\n                  <Text\r\n                    strong\r\n                    style={{ color: \"#fff\", cursor: \"pointer\" }}\r\n                    onClick={this.logOut}\r\n                  >\r\n                    Logout\r\n                  </Text>\r\n                </>\r\n              )}\r\n            </Menu>\r\n          </Header>\r\n          <Content style={{ padding: \"0 20px\" }}>{this.props.children}</Content>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Template;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button, DatePicker } from \"antd\";\r\nimport moment from \"moment\";\r\nconst { RangePicker } = DatePicker;\r\nconst addTaskStyle = {\r\n  textalign: \"center\",\r\n  padding: \"10px 0\"\r\n};\r\nconst margin = {\r\n  margin: '1rem 0'\r\n}\r\nmoment().format();\r\nclass AddTask extends Component {\r\n  state = {\r\n    startDate: \"\",\r\n    endDate: \"\"\r\n  };\r\n\r\n  onChange = (date, dateString) => {\r\n    this.setState({\r\n      startDate: dateString[0],\r\n      endDate: dateString[1]\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const input = event.target.querySelector(\"input\");\r\n    let text = input.value;\r\n    if (!text) return;\r\n    text = text.trim();\r\n    let startDate = this.state.startDate;\r\n    let endDate = this.state.endDate;\r\n    let miliSecond = String(moment().valueOf(startDate));\r\n    const item = {\r\n      id: miliSecond,\r\n      title: text,\r\n      startDate,\r\n      endDate\r\n    };\r\n    console.log({ item });\r\n    this.props.createTask(item);\r\n    this.props.success();\r\n    this.props.cancelAddTask(event);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} stlye={addTaskStyle}>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"New task\"\r\n            style={{ margin: \"10px 0\" }}\r\n          />\r\n          <RangePicker\r\n            onChange={this.onChange}\r\n            format={\"DD/MM/YYYY\"}\r\n           style={margin}\r\n          />\r\n          <Button htmlType=\"submit\" style={{ marginRight: \"20px\" }}>\r\n            Add\r\n          </Button>\r\n          <Button onClick={this.props.cancelAddTask}>Cancel</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import \"../css/Task.css\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { List, Typography, Icon, Popconfirm } from \"antd\";\r\nconst { Paragraph } = Typography;\r\n\r\nconst Task = (props) => {\r\n  const {\r\n    taskTitle,\r\n    startDate,\r\n    endDate,\r\n    updateTask,\r\n    taskID,\r\n    groupID,\r\n    onClickTask,\r\n    deleteTask,\r\n    index\r\n  } = props;\r\n  let expired = moment(endDate, \"DD/MM/YYYY\");\r\n  expired = expired.format(\"X\");\r\n  const now = moment().format(\"X\");\r\n  let classesName = \"Task-Box\";\r\n  if (now > expired) {\r\n    classesName += \" Expired\";\r\n  }\r\n  return (\r\n    <Draggable draggableId={taskID} index={index}>\r\n      {provided => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={classesName}\r\n            id={taskID}\r\n          >\r\n            <Paragraph\r\n              editable={{ onChange: updateTask }}\r\n              onClick={() => onClickTask(taskID, groupID)}\r\n            >\r\n              {taskTitle}\r\n            </Paragraph>\r\n            <List\r\n              size=\"small\"\r\n              dataSource={[startDate, endDate]}\r\n              renderItem={item => <List.Item>{item}</List.Item>}\r\n            />\r\n            <Popconfirm\r\n              title=\"Are you sure delete task?\"\r\n              onConfirm={() => deleteTask(taskID, groupID)}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Icon type=\"delete\" style={{ color: \"red\" }} />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport AddTask from \"./AddTask\";\r\nimport Task from \"./Task\";\r\n\r\nconst taskStyle = {\r\n  margin: \"20px 0\",\r\n  fontSize: \"1.1rem\"\r\n};\r\nclass TaskList extends Component {\r\n  state = {\r\n    isAddTask: false\r\n  };\r\n  handleClickAddTask = e => {\r\n    this.setState({ isAddTask: true });\r\n  };\r\n  // cancel add task\r\n  handleClickCancelAddTask = e => {\r\n    e.preventDefault();\r\n    this.setState({ isAddTask: false });\r\n  };\r\n  \r\n  render() {\r\n    const { groupTasks, groupID } = this.props;\r\n\r\n    let taskElement = groupTasks.map((task, index) => (\r\n      <Task\r\n        style={taskStyle}\r\n        key={task.id}\r\n        taskID={task.id}\r\n        taskTitle={task.title}\r\n        startDate={task.startDate}\r\n        endDate={task.endDate}\r\n        index={index}\r\n        {...this.props}\r\n      />\r\n    ));\r\n    return (\r\n      <React.Fragment>\r\n        <Droppable droppableId={groupID}>\r\n          {provided => (\r\n            <div ref={provided.innerRef} {...provided.droppableProps}>\r\n              {taskElement}\r\n\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        {this.state.isAddTask ? (\r\n          <AddTask\r\n            {...this.props}\r\n            cancelAddTask={this.handleClickCancelAddTask}\r\n          />\r\n        ) : (\r\n          <div onClick={this.handleClickAddTask} style={taskStyle}>\r\n            <Icon type=\"plus-circle\" theme=\"twoTone\" /> Add new task\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Card } from \"antd\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nconst styleBoard = {\r\n  boxShadow: \" 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\"\r\n};\r\nexport default class Board extends Component {\r\n  render() {\r\n    const { groupTitle, onClickGroup, groupID } = this.props;\r\n    return (\r\n      <div>\r\n        <Col\r\n          lg={8}\r\n          md={8}\r\n          sm={24}\r\n          xs={24}\r\n          onClick={onClickGroup.bind(this, groupID)}\r\n          id={groupID}\r\n          >\r\n          <Card style={styleBoard} hoverable={true} title={groupTitle}>\r\n            <TaskList {...this.props} />\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Board from \"./Board\";\r\nimport { Row, Spin, message } from \"antd\";\r\nimport { getBoard } from \"../service\";\r\nimport React, { Component } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nexport default class GroupList extends Component {\r\n  state = {\r\n    data: [],\r\n    currentIDGroup: null,\r\n    currentTitleGroup: null,\r\n    currentIndexGroup: null,\r\n\r\n    currentIDTask: null,\r\n    currentIndexTask: null,\r\n    currentTitleTask: null,\r\n\r\n    isAddGroup: false,\r\n    isLoading: true\r\n  };\r\n\r\n  // Fetch data thông qua file service\r\n  componentDidMount() {\r\n    getBoard().then(data => {\r\n      this.setState({ data, isLoading: false });\r\n    });\r\n  }\r\n  // get id of group & task\r\n  handleClickGroup = id => {\r\n    console.log('Click group', id);\r\n    if (id === this.state.currentIDGroup) return;\r\n\r\n    const { currentIndexGroup } = this.findIndex(id);\r\n    const currentTitleGroup = this.state.data[currentIndexGroup].title;\r\n\r\n    this.setState({\r\n      currentIDGroup: id,\r\n      currentIndexGroup,\r\n      currentTitleGroup\r\n    });\r\n  };\r\n  // kiểm tra board có re-render ko\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps !== this.props || nextState !== this.state) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // lấy index hiện tại của Task và Group\r\n  handleClickTask = (idTask, idGroup) => {\r\n    console.log('Click task', idTask, idGroup);\r\n    if (idTask === this.state.currentIDTask) return;\r\n\r\n    const { currentIndexTask, currentIndexGroup } = this.findIndex(\r\n      idGroup,\r\n      idTask\r\n    );\r\n\r\n    const currentTitleTask = this.state.data[currentIndexGroup].tasks[\r\n      currentIndexTask\r\n    ].title;\r\n\r\n    this.setState({\r\n      currentIDTask: idTask,\r\n      currentIndexTask,\r\n      currentTitleTask\r\n    });\r\n  };\r\n\r\n  handleAddTask = (idTask, idGroup) => {\r\n    if (idTask === this.state.currentIDTask) return;\r\n    // tìm index của Task và Group hiện tại\r\n    const { currentIndexTask, currentIndexGroup } = this.findIndex(\r\n      idTask,\r\n      idGroup\r\n    );\r\n    const currentTitleTask = this.state.data[currentIndexGroup].tasks[\r\n      currentIndexTask\r\n    ].title;\r\n\r\n    this.setState({\r\n      currentIDTask: idTask,\r\n      currentIndexTask,\r\n      currentTitleTask\r\n    });\r\n  };\r\n\r\n  // tìm idTask và idGroup\r\n  findIndex = (idGroup, idTask) => {\r\n    let currentIndexGroup;\r\n    let currentIndexTask;\r\n\r\n    this.state.data.forEach((item, index) => {\r\n      if (item.id === idGroup) {\r\n        currentIndexGroup = index;\r\n\r\n        item.tasks.forEach((task, index) => {\r\n          if (task.id === idTask) {\r\n            currentIndexTask = index;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return { currentIndexGroup, currentIndexTask };\r\n  };\r\n  // tạo task mới\r\n  createTask = item => {\r\n    this.state.data[this.state.currentIndexGroup].tasks.push(item);\r\n    this.setState({\r\n      data: this.state.data\r\n    });\r\n  };\r\n\r\n  updateTask = title => {\r\n    const taskClone = this.state.data[this.state.currentIndexGroup].tasks[\r\n      this.state.currentIndexTask\r\n    ];\r\n    taskClone.title = title;\r\n    this.state.data[this.state.currentIndexGroup].tasks.splice(\r\n      this.state.currentIndexTask,\r\n      1,\r\n      taskClone\r\n    );\r\n    this.setState({ data: this.state.data });\r\n  };\r\n\r\n  deleteTask = ( idTask, idGroup ) => {\r\n    this.state.data[idGroup -1 ].tasks.splice(\r\n      idTask -1,\r\n      1\r\n    );\r\n    this.setState({ data: this.state.data });\r\n    this.success();\r\n  };\r\n\r\n\r\n   success = () => {\r\n    message.success('Success');\r\n  };\r\n  \r\n   error = () => {\r\n    message.error('This is a message of error');\r\n  };\r\n  \r\n   warning = () => {\r\n    message.warning('This is message of warning');\r\n  };\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source } = result;\r\n    // return nếu ko có đích đến\r\n    if (!destination) return;\r\n    // return nếu cột đi = cột đích\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    const { index } = source;\r\n    const column = this.state.data;\r\n    // lấy index cột gốc\r\n    const sourceColumnIndex = column[source.droppableId - 1];\r\n    //lấy nội dung thẻ\r\n    // const task = sourceColumnIndex.tasks[index];\r\n    // // lấy nội dung cột đích\r\n    // const destinationColumnIndex =\r\n    //   column[destination.droppableId - 1].tasks[index];\r\n   // xóa task khỏi cột\r\n    let [updatedColumn] = sourceColumnIndex.tasks.splice(index, 1);\r\n    // thêm task vào cột đích\r\n    let demo = column[destination.droppableId - 1].tasks.splice(destination.index,0,updatedColumn);\r\n   \r\n    this.setState({\r\n      data: [\r\n        ...column,\r\n       [sourceColumnIndex]: demo\r\n      ],\r\n      ...this.state\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data, isLoading } = this.state;\r\n    if (isLoading || !this.state.data) {\r\n      return (\r\n        <Row   text-align=\"center\" style={{position:'fixed',top:'50%',left:'50%'}} >\r\n          <Spin tip=\"Loading...\" size=\"large\" />\r\n        </Row>\r\n      );\r\n    }\r\n    const groupElement = data.map(group => (\r\n      <Board\r\n        {...this.props}\r\n        key={group.id}\r\n        success={this.success}\r\n        error={this.error}\r\n        groupID={group.id}\r\n        groupTitle={group.title}\r\n        groupTasks={group.tasks}\r\n        onClickGroup={this.handleClickGroup}\r\n        onClickTask={this.handleClickTask}\r\n        currentIndexTask={this.currentIndexTask}\r\n        currentTitleGroup={this.state.currentTitleGroup}\r\n        currentTitleTask={this.state.currentTitleTask}\r\n        createTask={this.createTask}\r\n        updateTask={this.updateTask}\r\n        onChangeTask={({ target }) =>\r\n          this.setState({ currentTitleTask: target.value })\r\n        }\r\n        deleteTask={this.deleteTask}\r\n      />\r\n    ));\r\n    return (\r\n      <div>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Row gutter={16} justify=\"space-around\" style={{ padding: \"1rem 0\" }}>\r\n             {groupElement}\r\n          </Row>\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\n// import { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport Template from \"./components/Template\";\nimport GroupList from \"./components/GroupList\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Template>\n          <GroupList />\n      </Template>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}